{"ast":null,"code":"var _jsxFileName = \"/Users/mattpuleri/Desktop/Freelance/portfolio/src/components/ExperienceCarousel/ExperienceCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ExperienceCarousel.css'; // Make sure to import your CSS file\n\nimport arrow from '../../assets/photos/arrow.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst experienceData = [{\n  title: 'First Experience',\n  subtitle: 'Subtitle 1',\n  description: 'Description 1',\n  image: 'image-url-1.jpg'\n}, {\n  title: 'Second Experience',\n  subtitle: 'Subtitle 2',\n  description: 'Description 2',\n  image: 'image-url-2.jpg'\n}, {\n  title: 'Third Experience',\n  subtitle: 'Subtitle 3',\n  description: 'Description 3',\n  image: 'image-url-3.jpg'\n}, {\n  title: 'Fourth Experience',\n  subtitle: 'Subtitle 4',\n  description: 'Description 4',\n  image: 'image-url-4.jpg'\n}];\nconst ExperienceCarousel = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isTextLeft, setIsTextLeft] = useState(true);\n  const [autoplay, setAutoplay] = useState(true);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (autoplay) {\n        goToNextExperience();\n      }\n    }, 4000); // Change slide every 4 seconds\n\n    return () => clearInterval(interval);\n  }, [autoplay]);\n  const goToExperience = index => {\n    setCurrentIndex(index);\n    setAutoplay(false);\n    setIsTextLeft(!isTextLeft);\n  };\n  const goToNextExperience = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % experienceData.length);\n    setIsTextLeft(!isTextLeft);\n  };\n  const goToPreviousExperience = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? experienceData.length - 1 : prevIndex - 1);\n    setIsTextLeft(!isTextLeft);\n  };\n  const currentExperience = experienceData[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"experience-carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-arrow arrow-left\",\n        onClick: goToPreviousExperience,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `carousel-content ${isTextLeft ? 'text-left' : 'text-right'}`,\n        children: experienceData.map((experience, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `carousel-item ${index === currentIndex ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: experience.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: experience.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: experience.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: experience.image,\n              alt: experience.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-arrow arrow-right\",\n        onClick: goToNextExperience,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-buttons\",\n      children: experienceData.map((experience, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `carousel-button ${index === currentIndex ? 'active' : ''}`,\n        onClick: () => goToExperience(index),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ExperienceCarousel, \"lwvTaf4NkquevcehOeHSDmLElt8=\");\n_c = ExperienceCarousel;\nexport default ExperienceCarousel;\nvar _c;\n$RefreshReg$(_c, \"ExperienceCarousel\");","map":{"version":3,"names":["React","useState","useEffect","arrow","jsxDEV","_jsxDEV","experienceData","title","subtitle","description","image","ExperienceCarousel","_s","currentIndex","setCurrentIndex","isTextLeft","setIsTextLeft","autoplay","setAutoplay","interval","setInterval","goToNextExperience","clearInterval","goToExperience","index","prevIndex","length","goToPreviousExperience","currentExperience","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","experience","src","alt","_c","$RefreshReg$"],"sources":["/Users/mattpuleri/Desktop/Freelance/portfolio/src/components/ExperienceCarousel/ExperienceCarousel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ExperienceCarousel.css'; // Make sure to import your CSS file\n\nimport arrow from '../../assets/photos/arrow.svg'\n\nconst experienceData = [\n  {\n    title: 'First Experience',\n    subtitle: 'Subtitle 1',\n    description: 'Description 1',\n    image: 'image-url-1.jpg',\n  },\n  {\n    title: 'Second Experience',\n    subtitle: 'Subtitle 2',\n    description: 'Description 2',\n    image: 'image-url-2.jpg',\n  },\n  {\n    title: 'Third Experience',\n    subtitle: 'Subtitle 3',\n    description: 'Description 3',\n    image: 'image-url-3.jpg',\n  },\n  {\n    title: 'Fourth Experience',\n    subtitle: 'Subtitle 4',\n    description: 'Description 4',\n    image: 'image-url-4.jpg',\n  },\n];\n\nconst ExperienceCarousel = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isTextLeft, setIsTextLeft] = useState(true);\n  const [autoplay, setAutoplay] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (autoplay) {\n        goToNextExperience();\n      }\n    }, 4000); // Change slide every 4 seconds\n\n    return () => clearInterval(interval);\n  }, [autoplay]);\n\n  const goToExperience = (index) => {\n    setCurrentIndex(index);\n    setAutoplay(false);\n    setIsTextLeft(!isTextLeft);\n  };\n\n  const goToNextExperience = () => {\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % experienceData.length);\n    setIsTextLeft(!isTextLeft);\n  };\n\n  const goToPreviousExperience = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex === 0 ? experienceData.length - 1 : prevIndex - 1\n    );\n    setIsTextLeft(!isTextLeft);\n  };\n\n  const currentExperience = experienceData[currentIndex];\n\n  return (\n    <div className=\"experience-carousel\">\n      <div className=\"carousel-container\">\n        <button className=\"carousel-arrow arrow-left\" onClick={goToPreviousExperience}>\n          &lt;\n        </button>\n        <div className={`carousel-content ${isTextLeft ? 'text-left' : 'text-right'}`}>\n          {experienceData.map((experience, index) => (\n            <div\n              key={index}\n              className={`carousel-item ${index === currentIndex ? 'active' : ''}`}\n            >\n              <div className=\"carousel-text\">\n                <h2>{experience.title}</h2>\n                <h3>{experience.subtitle}</h3>\n                <p>{experience.description}</p>\n              </div>\n              <div className=\"carousel-image\">\n                <img src={experience.image} alt={experience.title} />\n              </div>\n            </div>\n          ))}\n        </div>\n        <button className=\"carousel-arrow arrow-right\" onClick={goToNextExperience}>\n            <img src={arrow}/>\n        </button>\n      </div>\n      <div className=\"carousel-buttons\">\n        {experienceData.map((experience, index) => (\n          <button\n            key={index}\n            className={`carousel-button ${index === currentIndex ? 'active' : ''}`}\n            onClick={() => goToExperience(index)}\n          >\n            {index + 1}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ExperienceCarousel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}